package com.brunomnsilva.fluentfxcss.definitions;

import java.util.Map;

/**
 * A {@link StyleDefinition} specifically tailored for styling JavaFX {@link javafx.scene.layout.Region} nodes.
 * <p>
 * This class extends {@link BaseStyleDefinition} and is typically produced by
 * {@link com.brunomnsilva.fluentfxcss.stylers.RegionStyler} or its subclasses (e.g.,
 * {@code com.brunomnsilva.fluentfxcss.stylers.concrete.FluentPaneStyler}).
 * </p>
 * <p>
 * While it inherits all the general style definition capabilities from {@code BaseStyleDefinition},
 * its specific type signifies that the encapsulated styles are intended for and relevant to
 * {@code Region} based UI elements, such as backgrounds, borders, padding, etc.
 * </p>
 * In the current version, this class does not add new methods beyond those in
 * {@code BaseStyleDefinition} but serves as a type-specific marker and allows for
 * future extensions related to region-specific style handling or querying.
 *
 * @see BaseStyleDefinition
 * @see StyleDefinition
 * @see com.brunomnsilva.fluentfxcss.stylers.RegionStyler
 * @see javafx.scene.layout.Region
 *
 * @author brunomnsilva
 */
public class RegionStyleDefinition extends BaseStyleDefinition {
    /**
     * Constructs a new {@code RegionStyleDefinition} with the given map of styles.
     * The provided map of styles is typically generated by a {@code RegionStyler}.
     *
     * @param styles A map where keys are CSS property names and values are their
     *               CSS string representations, relevant for {@code Region} styling.
     *               This map will be treated as unmodifiable by this instance.
     */
    public RegionStyleDefinition(Map<String, String> styles) {
        super(styles);
    }
}